name: 'CloudFormation Deploy'
description: 'Deploy to AWS CloudFormation using Python 3.11 and AWS CLI'
inputs:
  cf-stack-prefix:
    description: 'The prefix for the CloudFormation stack name. Fallback to repo name.'
    required: false
    default: ""
  env-name:
    description: 'The environment (will be added as suffix to the stack prefix). Fallback to branch name.'
    required: false
    default: ""
  docker-compose-file:
    description: 'The docker compose file path. Defaults to "docker-compose.yaml"'
    required: false
    default: ""
  ecs-composex-subs:
    description: 'A JSON string for replacing placeholders like ${foo} in the ECS compose x YAML file. JSON keys are the placeholders, values are the replacements. Defaults to {}'
    required: false
    default: "{}"
  ecs-composex-file:
    description: 'The AWS compose path. Defaults to "aws.yaml"'
    required: false
    default: ""
  ecr-keep-last-n-images:
    description: 'The number of images to keep in the ECR repository. Defaults to 10. Set to 0 to keep all.'
    required: false
    default: '10'

outputs:
  cf-output-path:
    description: 'A JSON string containing all CloudFormation outputs in JSON format'
    value: ${{ steps.deploy.outputs.cf-output-path }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: /tmp/.pip-action-cache
        key: ${{ runner.os }}-pip-${{ hashFiles('${GITHUB_ACTION_PATH}/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      shell: bash
      run: |
        PIP_CACHE_DIR=/tmp/.pip-action-cache pip install -r ${GITHUB_ACTION_PATH}/requirements.txt -q

    - # Add support for more platforms with QEMU
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-cache
        restore-keys: |
          ${{ runner.os }}-buildx-cache

    - name: Deploy
      shell: bash
      id: deploy
      env:
        GITHUB_WORKSPACE: ${{ github.workspace }}
        INPUT_CF_STACK_PREFIX: ${{ inputs.cf-stack-prefix }}
        INPUT_ENV_NAME: ${{ inputs.env-name }}
        INPUT_DOCKER_COMPOSE_FILE: ${{ inputs.docker-compose-file }}
        INPUT_ECS_COMPOSEX_FILE: ${{ inputs.ecs-composex-file }}
        INPUT_ECS_COMPOSEX_SUBS: ${{ inputs.ecs-composex-subs }}
        INPUT_ECR_KEEP_LAST_N_IMAGES: ${{ inputs.ecr-keep-last-n-images }}
      run: |
        cd ${GITHUB_ACTION_PATH}
        python -m src.github_action_handler
